basePath: /
definitions:
  dto.CreateUsuarioInput:
    properties:
      email:
        type: string
      nome:
        type: string
      senha:
        type: string
    required:
    - email
    - nome
    - senha
    type: object
  dto.LoginInput:
    properties:
      email:
        type: string
      senha:
        type: string
    required:
    - email
    - senha
    type: object
  dto.LoginResponse:
    properties:
      message:
        type: string
      token:
        description: uso futuro
        type: string
    type: object
  dto.ResponseMessage:
    properties:
      message:
        type: string
    type: object
  dto.UpdateUsuarioInput:
    properties:
      email:
        example: string
        type: string
      nome:
        example: string
        type: string
      senha:
        example: string
        type: string
    type: object
  models.Usuario:
    properties:
      atualizado_em:
        type: string
      criado_em:
        type: string
      email:
        type: string
      id:
        type: integer
      nome:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: API para controlar despesas
  title: Nami API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Autentica o usuário com email e senha e retorna um token JWT
      parameters:
      - description: Credenciais de login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.LoginResponse'
      summary: Realiza login do usuário
      tags:
      - Auth
  /usuarios:
    post:
      consumes:
      - application/json
      parameters:
      - description: Usuário
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUsuarioInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Usuario'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
      summary: Cria um usuário
      tags:
      - Usuários
  /usuarios/{id}:
    delete:
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
      summary: Deleta um usuário
      tags:
      - Usuários
    put:
      consumes:
      - application/json
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      - description: Dados para atualização
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUsuarioInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseMessage'
      summary: Atualiza um usuário
      tags:
      - Usuários
swagger: "2.0"
